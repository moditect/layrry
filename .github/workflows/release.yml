#
#  Copyright 2020 The ModiTect authors
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

name: Release

env:
  JAVA_VERSION: '17'
  JAVA_DISTRO: 'zulu'

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
      next:
        description: "Next version"
        required: false

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Set release version'
        id: version
        run: |
          chmod +x mvnw
          RELEASE_VERSION=${{ github.event.inputs.version }}
          NEXT_VERSION=${{ github.event.inputs.next }}
          PLAIN_VERSION=`echo ${RELEASE_VERSION} | awk 'match($0, /^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)/) { print substr($0, RSTART, RLENGTH); }'`
          COMPUTED_NEXT_VERSION="${PLAIN_VERSION}-SNAPSHOT"
          if [ -z $NEXT_VERSION ]
          then
            NEXT_VERSION=$COMPUTED_NEXT_VERSION
          fi
          echo "$NEXT_VERSION=$NEXT_VERSION" >> GITHUB_ENV
          ./mvnw -B -ntp versions:set versions:commit -DnewVersion=$RELEASE_VERSION
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "üèÅ Releasing version $RELEASE_VERSION"
          git push origin HEAD:master

      - name: Build
        run: |
          ./mvnw -B -ntp install

      - name: 'Release to Maven Central'
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          export GPG_TTY=$(tty)
          export MAVEN_OPTS=--illegal-access=permit
          ./mvnw --no-transfer-progress -B --file pom.xml \
            -Drepository.url=https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git \
            -Dmaven.site.skip=true -Drelease=true deploy

      - name: 'Release to GitHub'
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_SDKMAN_CONSUMER_KEY: ${{ secrets.JRELEASER_SDKMAN_CONSUMER_KEY }}
          JRELEASER_SDKMAN_CONSUMER_TOKEN: ${{ secrets.JRELEASER_SDKMAN_CONSUMER_TOKEN }}
        run: |
          ./mvnw -B -ntp -pl :layrry-aggregator -Pjreleaser jreleaser:full-release

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: 'Set next version'
        run: |
          ./mvnw -B versions:set versions:commit -DnewVersion=${{ env.$NEXT_VERSION }}
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "‚¨ÜÔ∏è  Next version ${{ env.$NEXT_VERSION }}"
          git push origin HEAD:master